from flask import Flask, render_template, url_for #для работы с сайтом
from flask_sqlalchemy import SQLAlchemy  #для работы с бд
#import sqlalchemy as db
#from sqlalchemy.orm import sessionmaker, scoped_session
from sqlalchemy import create_engine
#from sqlalchemy.ext.declarative import declarative_base

from datetime import datetime #для поля время в бд date

app = Flask(__name__)
app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///zoo.db'
db = SQLAlchemy(app)
engine = create_engine('sqlite:///db.sqlite')

#session = scoped_session(sessionmaker(autocommit=False, autoflush=False, bind=engine))

#Base = declarative_base()
#Base.query = session.query_property()

#from models import *

#Base.metadata.create_all(bind=engine)



class Article(db.Model):
   id = db.Column(db.Integer, primary_key=True)
   title = db.Column(db.String(100), nullable=False)
   intro = db.Column(db.String(300), nullable=False)
   text = db.Column(db.Text(300), nullable=False)
   date = db.Column(db.DateTime(300), default=datetime.utcnow)

    def __repr__(self):   #при выборе объекта на основе класса выше будет выдаваться объект и его id
        return '<Article %r>' % self.id


@app.route('/')
@app.route('/home')
def index():
    return render_template("index.html")


@app.route('/about')
def about():
    return render_template("about.html")

@app.route('/tickets')
def tickets():
    return render_template("tickets.html")


@app.route('/user/<string:name>/<int:id>')
def user(name, id):
    return "User page: " + name + " - " + str(id)


if __name__=="__main__":
    app.run(debug = True)

